User.create(username: 'user',        email: 'user@aa.io',     password: 'password')
User.create(username: 'demo',        email: 'demo@aa.io',     password: 'password')
User.create(username: 'test',        email: 'test@aa.io',     password: 'password')
User.create(username: 'tyler',       email: 'tyler@aa.io',    password: 'password')
User.create(username: 'treichle',    email: 'treichle@aa.io', password: 'password')
User.create(username: 'thegraceann', email: 'grace@aa.io',    password: 'password')

Notebook.create(
  author_id: 2,
  title: 'Personal Notes',
  description: 'personal stuff here'
)

Notebook.create(
  author_id: 2,
  title: 'Programming Notes',
  description: 'Notes related to programming'
)

Note.create(
  title: 'Popular Quotes',
  body: '{"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://www.goodreads.com/author/show/5810891.Mahatma_Gandhi","url":"https://www.goodreads.com/author/show/5810891.Mahatma_Gandhi"}}},"blocks":[{"key":"17t65","text":"“If you want to know what a mans like, take a good look at how he treats his inferiors, not his equals.” ","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"aa3d3","text":"   - J.K. Rowling, Harry Potter and the Goblet of Fire","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":5,"length":49,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"3kdg1","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bons8","text":"“Dont cry because its over, smile because it happened.” ","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"82p14","text":"    - Dr. Seuss","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":6,"length":9,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"2f0ep","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"7flns","text":"“Be yourself; everyone else is already taken.”","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"7vn8h","text":"   - Oscar Wilde\n","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":5,"length":11,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"elkpi","text":"“Two things are infinite: the universe and human stupidity; and Im not sure about the universe.” ","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6g065","text":"   - Albert Einstein\n","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":5,"length":15,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"2ofjv","text":"“Be who you are and say what you feel, because those who mind dont matter, and those who matter dont mind.”","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"llkp","text":"   - Bernard M. Baruch\n","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":5,"length":17,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"d7evf","text":"“So many books, so little time.”","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"91utg","text":"   - Frank Zappa","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":5,"length":11,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"840at","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"464eq","text":"“Youve gotta dance like theres nobody watching,\n  Love like youll never be hurt,\n  Sing like theres nobody listening,\n  And live like its heaven on earth.”","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"a44sb","text":"   - William W. Purkey","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":5,"length":17,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"e9ff8","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"gfq8","text":"“A room without books is like a body without a soul.”","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8k6m4","text":"   - Marcus Tullius Cicero","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":5,"length":21,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"acat9","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"54jjk","text":"“You know youre in love when you cant fall asleep because reality is finally better than your dreams.”","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fd4p6","text":"   - Dr. Suess","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":5,"length":9,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"282hr","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fmqmh","text":"You only live once, but if you do it right, once is enough.”","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9sgb5","text":"   - Mae West","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":5,"length":8,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"7opj4","text":"\n“Be the change that you wish to see in the world.”","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"56vo0","text":"   - Mahatma Gandhi","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":5,"length":14,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"29vev","text":"\n“In three words I can sum up everything Ive learned about life: it goes on.”","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"a9jmc","text":"   - Robert Frost","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":5,"length":12,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"b2ps6","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4fas7","text":"“Friendship ... is born at the moment when one man says to another \"What! You too? I thought that no one but myself . . .\"” ","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"enmgd","text":"   - C.S. Lewis, The Four Loves\n","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":5,"length":26,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"2lr9s","text":"“Dont walk in front of me… I may not follow\n Dont walk behind me… I may not lead\n Walk beside me… just be my friend” ","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cfm1v","text":"   - Albert Camus\n","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":5,"length":12,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"fck5c","text":"“No one can make you feel inferior without your consent.”","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"72p8k","text":"   - Elenor Roosevelt, This is My Story","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":5,"length":34,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"anapp","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"7s9ls","text":"“If you tell the truth, you dont have to remember anything.”","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1jf0e","text":"   - Mark Twain","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":5,"length":10,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"1ksa8","text":"\n“A friend is someone who knows all about you and still loves you.”","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5c6ei","text":"   - Elbert Hubbard","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":5,"length":14,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"eno5n","text":"\n“Ive learned that people will forget what you said, people will forget what you did, but people will never forget how you made them \n feel.”","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9oiq9","text":"   - Maya Angelou","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":5,"length":12,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"mtsk","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"83frj","text":"“Always forgive your enemies; nothing annoys them so much.”","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1ef2n","text":"   - Oscar Wilde","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":5,"length":11,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"se4p","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6vcgv","text":"“Live as if you were to die tomorrow. Learn as if you were to live forever.” \n― Mahatma Gandhi","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":80,"length":14,"style":"BOLD"}],"entityRanges":[{"offset":80,"length":14,"key":0}],"data":{}},{"key":"e0qd1","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9nmi","text":"“To live is the rarest thing in the world. Most people exist, that is all.”","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"d23dp","text":"   - Oscar Wilde","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":5,"length":11,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"5t8ad","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"aikms","text":"“Darkness cannot drive out darkness: only light can do that. Hate cannot drive out hate: only love can do that.”","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8up7","text":"  - Martin Luther King Jr., A Testament of Hope: The Essential Writing and Speeches","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":4,"length":79,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"d7dbk","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4otk5","text":"“I am so clever that sometimes I dont understand a single word of what I am saying.\"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5rv85","text":"   - Oscar Wilde, The Happy Prince and Other Stories","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":5,"length":47,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"8g3mq","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"d8cft","text":"“Without music, life would be a mistake.”","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"atmng","text":"   - Friedrich Nietzsche, Twilight of the Idols","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":5,"length":42,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"q7g8","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"aoqqf","text":"“Heres to the crazy ones. The misfits. The rebels. The troublemakers. The round pegs in the square holes. The ones who see things \n  differently. Theyre not fond of rules. And they have no respect for the status quo. You can quote them, disagree with them, glorify or \n  vilify them. About the only thing you cant do is ignore them. Because they change things. They push the human race forward. And \n  while some may see them as the crazy ones, we see genius. Because the people who are crazy enough to think they can change the \n  world, are the ones who do.”","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"83u2r","text":"   - Rob Siltanen","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":5,"length":12,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"abj0q","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"acj8","text":"“To be yourself in a world that is constantly trying to make you something else is the greatest accomplishment.”","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"369hl","text":"   - Ralph Waldo Emerson","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":5,"length":19,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"8p9k0","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"96iav","text":"“We accept the love we think we deserve.”","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"7s5m","text":"   - Stephen Chbosky, The Perks of Being a Wallflower","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":5,"length":48,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"bfd04","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3lfd2","text":"“Insanity is doing the same thing, over and over again, but expecting different results.”","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"60i94","text":"   - Narcotics Anonymous","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":5,"length":19,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"17bf0","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"aoshs","text":"“I believe that everything happens for a reason. People change so that you can learn to let go, things go wrong so that you appreciate \n  them when theyre right, you believe lies so you eventually learn to trust no one but yourself, and sometimes good things fall apart so \n  better things can fall together.”","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"18u8p","text":"   - Marilyn Monroe","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":5,"length":14,"style":"BOLD"}],"entityRanges":[],"data":{}}]}',
  author_id: 2,
  notebook_id: 1
)

Note.create(
  title: 'My Shoe Sizes',
  body: '{"entityMap":{},"blocks":[{"key":"n5v8","text":"Vans: 10.5","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":5,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"c0olf","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"7gnjf","text":"Nike: 11","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":5,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"5qo1b","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"511v6","text":"New Balance: 11","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":12,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"a3s4t","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"7vp4l","text":"Asics: 11","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":6,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"4bkqu","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"7gckb","text":"Adidas: 10.5 / 11 with sole insert","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":7,"style":"BOLD"}],"entityRanges":[],"data":{}}]}',
  author_id: 2,
  notebook_id: 1
)

Note.create(
  title: 'SF Bar List',
  body: '{"entityMap":{},"blocks":[{"key":"6o96l","text":"Anchor Brewings Taproom","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"99iio","text":"Aub Zam Zam","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{"checked":true}},{"key":"8v6g5","text":"Bow Bow Cocktail Lounge","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4d98m","text":"Buddha Lounge","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{"checked":true}},{"key":"9afim","text":"Buena Vista Cafe","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fbem8","text":"CCs Cocktails","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"44sjo","text":"Clooneys","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6v2hs","text":"Comstock Saloon","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fcr5s","text":"The Connecticut Yankee","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fkkf4","text":"Dave’s","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3a2n5","text":"Final Final","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"7do8s","text":"Gestalt (pinball)","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{"checked":true}},{"key":"k3ri","text":"The Hideout at Dalva","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"949eh","text":"House of Prime Rib","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"75h6m","text":"House of Shields","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"dianu","text":"The Interval","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{"checked":true}},{"key":"fanhm","text":"Li Po Cocktail Lounge","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2pldb","text":"The Kezar Pub","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3590n","text":"Kozy Kar","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{"checked":true}},{"key":"212lu","text":"Mariannes","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6ak2g","text":"Mikkeller Bar","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"iar2","text":"The Monk’s Kettle","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{"checked":true}},{"key":"56l3s","text":"Mr. Bings","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"b7ri2","text":"Northstar Cafe","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"58c9h","text":"The Page","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"f12jf","text":"The Pied Piper","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"ctd5d","text":"Pops","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6b5pj","text":"Red’s Java House","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fg0nd","text":"The Riptide","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9v7v3","text":"Smugglers Cove","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{"checked":true}},{"key":"76uqv","text":"Spec’s Twelve Adler Museum","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3l8i1","text":"Suppenkuche","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"33jss","text":"Tommys Mexican Restaurant","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"b2s0f","text":"The Tonga Room","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"alerh","text":"Top of the Mark","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3n5e1","text":"Toronado","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9r4co","text":"Trick Dog","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9vish","text":"Twin Peaks Tavern","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3pn1u","text":"The View Lounge","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{"checked":true}},{"key":"d1qao","text":"Wayfare Cafe","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{"checked":true}},{"key":"6v832","text":"Wingtip","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fr74r","text":"Zeitgeist","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{"checked":true}}]}',
  author_id: 2,
  notebook_id: 1
)

Note.create(
  title: 'Need to Watch',
  body: '{"entityMap":{},"blocks":[{"key":"3npt3","text":"Arrested Development","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"7238u","text":"Curb Your Enthusiasm","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{"checked":true}},{"key":"cb7s6","text":"Workaholics","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fb52h","text":"An Idiot Abroad","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{"checked":true}},{"key":"cqtfu","text":"The Wire","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cll5","text":"Narcos","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"c67ir","text":"Hot Fuzz","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{"checked":true}},{"key":"3lf2n","text":"Lord of the Rings","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3dkgt","text":"Game of Thrones","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{"checked":true}},{"key":"8auio","text":"Breaking Bad","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{"checked":true}},{"key":"1r5ch","text":"Boardwalk Empire","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"546oj","text":"Sherlock","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"f5fjl","text":"True Detective","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"7k4ic","text":"Freaks and Geeks","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"230a4","text":"Undeclared","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"f7b01","text":"Eastbound and Down","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{"checked":true}},{"key":"du62c","text":"Ex Machina","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{"checked":true}},{"key":"cpb89","text":"Rick and Morty","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"672q4","text":"Mr. Robot","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6abob","text":"Collateral","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{"checked":true}},{"key":"40s0g","text":"Pans Labyrinth","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"f32jp","text":"Jurassic Park II","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{"checked":true}},{"key":"3ueab","text":"Jurassic World","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"ccpl5","text":"Star Trek","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cm5lk","text":"In Bruges","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4u0ae","text":"Edge of Tomorrow","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{"checked":true}},{"key":"1o1q","text":"There Will Be Blood","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4t7no","text":"Dexter","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8es7","text":"Momento","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8sca8","text":"The Shining","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cq70c","text":"The Thing","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{"checked":true}},{"key":"2su6p","text":"Psycho","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"7b0sq","text":"Rear Window","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"23q78","text":"Trick r Treat","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{"checked":true}},{"key":"abgq4","text":"Alien","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"t3s8","text":"Road to Perdition","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{"checked":true}},{"key":"8ldkn","text":"Big Lebowski","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{"checked":true}}]}',
  author_id: 2,
  notebook_id: 1
)

Note.create(
  title: 'JavaScript Notes',
  body: '{"entityMap":{},"blocks":[{"key":"f7gks","text":"every function has a prototype (an object)","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":6,"length":9,"style":"BOLD"},{"offset":21,"length":10,"style":"BOLD"},{"offset":32,"length":9,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"amfqf","text":"every object (like a hash) has a __proto__ pointing to its prototype","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":6,"length":6,"style":"BOLD"},{"offset":33,"length":10,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"82d6g","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fp13q","text":"// ES5","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":6,"style":"HIGHLIGHT"}],"entityRanges":[],"data":{}},{"key":"3aoja","text":"   let Surrogate = function () {}; ","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":35,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"ai3al","text":"   Surrogate.prototype = Animal.prototype;","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":42,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"3v01","text":"   Dog.prototype = new Surrogate();","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":35,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"4n5ma","text":"   Dog.prototype.constructor = Dog;","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":35,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"agddp","text":"   Dog.prototype = Object.create(Animal.prototype)","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":50,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"173fb","text":"   Dog.prototype.constructor = Dog","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":34,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"9ggka","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"a4ial","text":"// ES6","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":6,"style":"HIGHLIGHT"}],"entityRanges":[],"data":{}},{"key":"ch5un","text":"   class Dog extends Animal \n","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":3,"length":25,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"6q1au","text":"anonymous callback: ","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"ctgth","text":"   passed in directly","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"25jh6","text":"   () => { somethings; } \n","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":11,"length":12,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"9vnba","text":"anonymous closure: ","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"ea96h","text":"   return value is a new function \n","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":21,"length":13,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"ppic","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1bd3s","text":"apply - (obj to bind this to, [args to be passed to method apply is being called on])","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":8,"style":"BOLD"},{"offset":21,"length":5,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"d5gre","text":"call -  args are passed in individually","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":7,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"5plq8","text":"bind - returns a new bound function","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":7,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"e92sp","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"33a8o","text":"arguments: ","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4dsh5","text":"   let args_array = Array.from(arguments);\n","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"brpno","text":"rest params:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6u462","text":"   only grabs unnamed arguments\n","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"f8pf7","text":"   pass to function call using …\n","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5d35c","text":"callbacks: ","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":9,"style":"HIGHLIGHT"}],"entityRanges":[],"data":{}},{"key":"e22m1","text":"   an invocation to the CB is returned in the main function’s body (can call return function (x) {  }; directly)\n","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":77,"length":26,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"15r0e","text":"higher-order functions:","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":22,"style":"HIGHLIGHT"}],"entityRanges":[],"data":{}},{"key":"fsth3","text":"   take callbacks as an argument OR \n","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"80aio","text":"   return another function\n","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"67cs6","text":"function composition:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6ptia","text":"   functions that take a function as an argument AND return a new function","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}]}',
  author_id: 2,
  notebook_id: 2
)

Note.create(
  title: 'Redux',
  body: '{"entityMap":{},"blocks":[{"key":"2aunc","text":"lodash - JS library & npm-package ","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":6,"style":"BOLD"},{"offset":0,"length":6,"style":"HIGHLIGHT"}],"entityRanges":[],"data":{}},{"key":"7c8qm","text":" import merge from lodash/merge","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":31,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"3245d","text":"\nmerge(new, original) - deep-dups object   ","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9vugs","text":" *prefer over Object.assign()","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"7gihm","text":"\nunion(arr1, arr2) - returns array of unique values, in insertion order    ","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3gao2","text":"*careful using with objects","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1j2oi","text":"\nflux ","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":1,"length":4,"style":"BOLD"},{"offset":1,"length":4,"style":"HIGHLIGHT"}],"entityRanges":[],"data":{}},{"key":"30n82","text":"- front-end app architecture (like MVC)    ","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"ekq4v","text":" -provides unidirectional data flow (more predictable than multi-thread, cascading updates)","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"ol3s","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"delii","text":"redux - node package that facilitates implementation of Flux 3 Principles: ","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":6,"style":"BOLD"},{"offset":0,"length":5,"style":"HIGHLIGHT"}],"entityRanges":[],"data":{}},{"key":"1r5nu","text":"Single source of truth - entire application state stored in single JS obj in single store ","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6cvmr","text":"State is read-only - only way to change it is to dispatch an action ","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1vlv1","text":"Only pure functions can change state - reducers receive prev state + action and return next state (new state object)","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"b11i2","text":"-all reducers must be pure functions! need to ensure deterministic state management","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"n1aa","text":"\nimpure functions include:","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":1,"length":24,"style":"HIGHLIGHT"}],"entityRanges":[],"data":{}},{"key":"cit15","text":"current time","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6i242","text":"random number","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"7lgin","text":"I/O ","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"de4mq","text":"pure functions:","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":14,"style":"HIGHLIGHT"}],"entityRanges":[],"data":{}},{"key":"2f0rl","text":"   no side-effects (no mutations!) - use merge!","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bodib","text":"   one input will always yield same output","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"7n9g7","text":"   does not rely on any external mutable state ","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"66s5s","text":"action - object that contains a type of change to be performed. may also contain payload keys (new information)    ","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":6,"style":"BOLD"},{"offset":32,"length":4,"style":"UNDERLINE"},{"offset":81,"length":12,"style":"UNDERLINE"}],"entityRanges":[],"data":{}},{"key":"6hrbu","text":"the only way for view components to trigger changes to the store    ","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"b74dk","text":"sent using store.dispatch()  ","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"7hd1p","text":"primary drivers of Redux loop","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4b1gp","text":"\n**if payloads are generated dynamically, must turn action object —> action creator that returns an action (JS object) by passing payload as argument.","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":29,"length":11,"style":"UNDERLINE"},{"offset":52,"length":16,"style":"BOLD"},{"offset":69,"length":37,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"8qsfn","text":"\n**write action creators that return action objects (instead of having to write in action objects dispatch)","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"42dm7","text":"\nHow do actions and reducers interact? - Action gets sent to store via dispatch method. Store then passes the action and the old state to the reducer, which churns out the new state","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":1,"length":37,"style":"UNDERLINE"}],"entityRanges":[],"data":{}},{"key":"cq4cl","text":"\ndispatcher - dispatches actions to store ","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":1,"length":10,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"1coau","text":"\nstore - represents entire state of app, IMMUTABLE (never assign to anything inside the state unless you clone it first)    ","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":1,"length":5,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"bn7lc","text":"listens for actions & updates state of app (via reducer) —> reducer returns new array or object        ","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":12,"length":10,"style":"ITALIC"},{"offset":48,"length":7,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"fvhvq","text":"registers and unregisters change listeners ","type":"unordered-list-item","depth":1,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"dh7vt","text":"after store changes state, is emits a change (passes new state to any views) via subscription ","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":81,"length":13,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"bhp5q","text":"subscribers - change listeners that are triggered any time an action is dispatched. ","type":"unordered-list-item","depth":1,"inlineStyleRanges":[{"offset":0,"length":14,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"et14a","text":"-invoke the subscribers return function to unsubscribe\nstore.subscribe(listener function - may call getState() inside of it) - connects React view layer to store\n","type":"unordered-list-item","depth":2,"inlineStyleRanges":[{"offset":55,"length":69,"style":"HIGHLIGHT"},{"offset":71,"length":52,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"dvmg3","text":"getState()","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6usj2","text":"dispatch(action) - passes action to stores reducer telling it which info to update","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bhfg3","text":"subscribe(callback) - registers cbs to be triggered whenever store updates ","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2uvvk","text":"-returns a function, which when invoked, unsubscribes the cb from the store","type":"unordered-list-item","depth":1,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"52ajr","text":"\nreducers -","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":1,"length":8,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"d0dbd","text":"do not care about actions that do not match an action.type","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"nqpa","text":"import combineReducers() to import more than one reducer to store","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"68sv9","text":"\nREDUCER EXAMPLE:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cuktc","text":"\n*Redux calls reducer with an undefined state for the first time, which is our chance to return the initial state of our app (default value)\n**use Object.freeze() to ensure state will not be mutated","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bhnjf","text":"\nreducer composition","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":1,"length":19,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"1luk7","text":"splitting reducer into multiple ones, each handling separate, independent slices of information","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8ipei","text":"a reducers state param is limited to the part of the state that it manages","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bce84","text":"delegating reducer functions to subordinate reducers","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"323o","text":"\nview -","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":1,"length":4,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"bc1o","text":"listens to change events emitted by store, responds by triggering re-render","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"aejlr","text":"create actions in user-triggered events, which turns Flux pattern into a unidirectional loop\n**common pattern: dispatch an action that populates the initial state of the app, with further modifications coming from the client","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4fcqp","text":"\nreact-redux - helps us avoid prop-threading —> deeply nested components can access store without having to ascend all ancestors","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":1,"length":12,"style":"BOLD"},{"offset":30,"length":15,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"994ta","text":"\nProvider - React component in which we wrap the rest of the application. Receives store as argument. Sets a store context (invisible prop) which is passed to all of its children","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":1,"length":8,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"dc2b3","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3sp0m","text":"npm install --save react-reduximport { Provider } from react-redux;","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":67,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"e6mkq","text":"\nContainer Components","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":1,"length":20,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"7m95u","text":"responsible for retrieving data and dispatching actions","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bue82","text":"\nleverages Redux to do so using:    ","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":1,"length":31,"style":"UNDERLINE"}],"entityRanges":[],"data":{}},{"key":"18tbk","text":"-connect() ","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"16l5v","text":"- access store context by passing specific slices of stores state & specific action-dispatches to a React component as props   ","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8lrgr","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3l6v8","text":"const createConnectedComponent = connect(mapStateToProps, mapDispatchToProps) ","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":78,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"85knc","text":"const ConnectedComponent = createConnectedComponent(MyComponent)","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":64,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"8kglg","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"ia9i","text":"mapStateToProps() - use to grab data from state     -pass necessary portions of data down to its children as props","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":17,"style":"HIGHLIGHT"}],"entityRanges":[],"data":{}},{"key":"ca818","text":"mapDispatchToProps() - returns object containing functions that can be called to dispatch actions to store \n\n ownProps ","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":20,"style":"HIGHLIGHT"},{"offset":110,"length":9,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"ad07m","text":"- use if you want to incorporate explicit props passed down from parent along with state context I need to see an example of this presentational component. Does it inherit props from super AND get passed necessary portions of state context through connect?","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"ch4vk","text":"\nPresentational Components  ","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":1,"length":27,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"6c9pr","text":"-simply receives data from parent container and displays it-purely functional…only need a render method!","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":1,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"abdko","text":"\nHow can a users interaction with a presentation component ultimately trigger an action?—> Callback prop: ","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9tii9","text":"function defined in container component that dispatches an action","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"67ptj","text":"passed as a prop to child/presentational component","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2m7fc","text":"triggered via callback, in response to users action","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"c3c43","text":"\nSelectors \ndefine in frontend/reducers/selectors.js file, remember to export!-passed the apps state, return info from the application state in a specified form (ie array)\n\nActions are just JS objects that contain a callback function to be performed, and maybe some information about the new state. Actions get sent to the store via dispatchers. The only way the store can change is through an action. The stores reducer contains many combined reducers (pure functions) that handle the actions - they are simply switch statements that detail out how each particular action should update the store. \n\n","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":1,"length":10,"style":"BOLD"},{"offset":173,"length":7,"style":"HIGHLIGHT"}],"entityRanges":[],"data":{}}]}',
  author_id: 2,
  notebook_id: 2
)

Note.create(
  title: 'Grocery List',
  body: '{"entityMap":{},"blocks":[{"key":"6o9tu","text":"Hamburgers","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":10,"style":"UNDERLINE"}],"entityRanges":[],"data":{}},{"key":"218sa","text":"Ground Beef","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{"checked":true}},{"key":"df5uv","text":"Lettuce","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3472u","text":"Red Onions","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{"checked":true}},{"key":"46okf","text":"Veggie Patty ","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{"checked":true}},{"key":"fhvdi","text":"Hamburger Buns","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{"checked":true}},{"key":"3fcfk","text":"Spaghetti and Meatballs ","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":24,"style":"UNDERLINE"}],"entityRanges":[],"data":{}},{"key":"aimuo","text":"Pasta Noodles","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bpo4a","text":"Sauce ","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{"checked":true}},{"key":"9mla8","text":"Ground Beef","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cal8l","text":"Breadcrumbs ","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{"checked":true}},{"key":"8irtj","text":"Garlic","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5c6pe","text":"Chicken Teriyeki ","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":17,"style":"UNDERLINE"}],"entityRanges":[],"data":{}},{"key":"1phks","text":"Chicken ","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{"checked":true}},{"key":"52h14","text":"Brown Rice ","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{"checked":true}},{"key":"7189d","text":"Vegetables","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{"checked":true}},{"key":"eomch","text":"Tacos ","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":6,"style":"UNDERLINE"}],"entityRanges":[],"data":{}},{"key":"2cllo","text":"Flour (big sized) tortillas","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cvupi","text":"Marinated Carne Asada (or beef and seasoning) ","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"48cvn","text":"Black beans","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"e8ilp","text":"Sweet Potato","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{"checked":true}},{"key":"edkrn","text":"Lime","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{"checked":true}},{"key":"aq73e","text":"Cilantro","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"aiv8p","text":"Avocado","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3or60","text":"White Onions","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"aejvv","text":"Others","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":6,"style":"UNDERLINE"}],"entityRanges":[],"data":{}},{"key":"8j8tn","text":"Milk","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{"checked":true}},{"key":"5i520","text":"Eggs","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{"checked":true}},{"key":"95fg2","text":"Bananas","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"b2ljv","text":"Yogurt","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"12emh","text":"Ice Cream (x2)","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"n2g","text":"Sweet Treats (donuts? cookies?) ","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"46jfh","text":"Dr. Pepper or Coke ","type":"checkable-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}]}',
  author_id: 2,
  notebook_id: 1
)

Note.create(
  title: 'Understanding Callbacks',
  body: '{"entityMap":{},"blocks":[{"key":"42vho","text":"functions are objects and can be:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cnu6f","text":"stored in variables","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"22mi1","text":"passed as arguments to another function to either:","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":50,"style":"HIGHLIGHT"}],"entityRanges":[],"data":{}},{"key":"9f9hs","text":"execute passed-in function later","type":"unordered-list-item","depth":1,"inlineStyleRanges":[{"offset":0,"length":32,"style":"HIGHLIGHT"}],"entityRanges":[],"data":{}},{"key":"1egq6","text":"return passed-in function to be  executed later","type":"unordered-list-item","depth":1,"inlineStyleRanges":[{"offset":0,"length":47,"style":"HIGHLIGHT"}],"entityRanges":[],"data":{}},{"key":"dckil","text":"created with functions","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"a03lq","text":"returned from functions ","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8meim","text":"\nCallback (aka higher-order) function - a function that is passed to otherFunction as a parameter, and the callback function is called/executed inside the otherFunction ","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":1,"length":36,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"dottq","text":"-callback functions are established solutions to a common problem ","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"51spc","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"48i5r","text":"How it works: ","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6idpm","text":"we only pass the function definition to otherFunction as a parameter. (we are NOT executing the function in the parameter)","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5ddk1","text":"the callback function is NOT executed immediately, it is called back at a specific point in the containing functions body","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"18tre","text":"the callback function can access the containing functions variables and variables from the global scope","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"als0e","text":"can pass anonymous OR named callback functions to otherFunctions ","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"ijh3","text":"callback functions can take parameters from:","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"aa4mm","text":"any of the containing functions’ properties or global properties ","type":"unordered-list-item","depth":1,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8rh1o","text":"ENSURE CALLBACK IS A FUNCTION: \n if (typeof callback === “function”) {","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":32,"length":38,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"8ptth","text":"     callback(parameter); \n \nBest Practices: \n - name your callback functions and declare them, then pass the name of the function as the callback (rather then defining anonymous functions in the parameter of the main function) ","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":26,"style":"CODE"},{"offset":14,"length":9,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"35npp","text":"Set up callback function that takes parameter(s).","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"78ill","text":"Set up main function that is now versatile - output will change based on input to callback! Set callback as final parameter","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9c4pf","text":"right before calling callback function, ensure it is a function!","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cei12","text":"call the main function and pass the name of the callback","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"modb","text":"Bonus: You can pass ANY callback function you create to main function!","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}]}',
  author_id: 2,
  notebook_id: 2
)

Note.create(
  title: 'Travel Itinerary',
  body: '{"entityMap":{},"blocks":[{"key":"99laa","text":"ENGLAND","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":7,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"1qq8i","text":"10/6 London to Madrid:","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":5,"length":16,"style":"UNDERLINE"},{"offset":21,"length":1,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"19u84","text":"    flight: $189.10","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":4,"style":"BOLD"},{"offset":4,"length":15,"style":"HIGHLIGHT"}],"entityRanges":[],"data":{}},{"key":"c93go","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"dujja","text":"SPAIN","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":5,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"8b92d","text":"11/6 Madrid to Barcelona","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":5,"length":19,"style":"UNDERLINE"}],"entityRanges":[],"data":{}},{"key":"ba1eg","text":"    flight: $143.80 - 1hr 15m ","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":4,"style":"BOLD"},{"offset":4,"length":26,"style":"HIGHLIGHT"}],"entityRanges":[],"data":{}},{"key":"4kkok","text":"    bus: $72 - 7hr 35m","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5te4v","text":"    train: $147 - 3hr","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3uruo","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9t6t4","text":"13/6 Barcelona to Venice","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":5,"length":19,"style":"UNDERLINE"}],"entityRanges":[],"data":{}},{"key":"dfmhq","text":"    flight: $199.69 - 1hr 45m","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":4,"style":"BOLD"},{"offset":4,"length":25,"style":"HIGHLIGHT"}],"entityRanges":[],"data":{}},{"key":"1kj3p","text":"   bus: $185 - 22hr 30m","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"ei0hd","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1osld","text":"ITALY","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":5,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"cekcl","text":"14/6 - Venice to Florence","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":7,"length":18,"style":"UNDERLINE"}],"entityRanges":[],"data":{}},{"key":"2fa2p","text":"    bus: $36.75  - 3hr 55m","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"f4et8","text":"    train: $66 - 1hr 53m","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":4,"style":"BOLD"},{"offset":4,"length":20,"style":"HIGHLIGHT"}],"entityRanges":[],"data":{}},{"key":"ce40a","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"452tm","text":"15/6 - Florence to Rome","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":7,"length":16,"style":"UNDERLINE"}],"entityRanges":[],"data":{}},{"key":"35jk6","text":"   bus: $13 - 3hr 30m","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":3,"style":"BOLD"},{"offset":3,"length":18,"style":"HIGHLIGHT"}],"entityRanges":[],"data":{}},{"key":"1haj4","text":"   train: $33 - 1hr 20m","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"ddf1r","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"e213g","text":"17/6 - Rome to Naples","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":7,"length":14,"style":"UNDERLINE"}],"entityRanges":[],"data":{}},{"key":"6rnr3","text":"    bus: $17 - 2hr 50m","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":4,"style":"BOLD"},{"offset":4,"length":18,"style":"HIGHLIGHT"}],"entityRanges":[],"data":{}},{"key":"crrpo","text":"    train: $33 - 1hr 30m","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5j97u","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3jjk9","text":"18/6 - Naples to Paris","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":7,"length":15,"style":"UNDERLINE"}],"entityRanges":[],"data":{}},{"key":"batbd","text":"    flight: $137.06 - 2hr 25m","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":4,"style":"BOLD"},{"offset":4,"length":25,"style":"HIGHLIGHT"}],"entityRanges":[],"data":{}},{"key":"6b505","text":"    bus: $55 - 13hr 27m","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"7ll2r","text":"    train: $279 - 15h 55m","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":4,"length":21,"style":"STRIKETHROUGH"}],"entityRanges":[],"data":{}},{"key":"d257o","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fe7sg","text":"Italy Eurail Pass (2 Youth)","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":17,"style":"UNDERLINE"}],"entityRanges":[],"data":{}},{"key":"bp51v","text":"    3 days: first class $360, second class $294","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4o8q2","text":"    4 days: first class $432, second class $352","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6k5ks","text":"    5 days: first class $498, second class $406","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}]}',
  author_id: 2,
  notebook_id: 1
)

Note.create(
  title: 'Ruby - hashes, ranges, enumerables, & iterators',
  body: '{"entityMap":{},"blocks":[{"key":"4hbic","text":"enumerables - set of methods that sort or traverse collections of data","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":13,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"d75hd","text":" \n all? - returns true if the block always returns a truthy value, otherwise it returns false \n      none? - true if block never returns truthy value","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":3,"length":4,"style":"BOLD"},{"offset":96,"length":10,"style":"BOLD"},{"offset":36,"length":6,"style":"UNDERLINE"},{"offset":123,"length":5,"style":"UNDERLINE"},{"offset":36,"length":6,"style":"HIGHLIGHT"},{"offset":123,"length":5,"style":"HIGHLIGHT"}],"entityRanges":[],"data":{}},{"key":"4iqqk","text":"      any? -true if block ever returns truthy value","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":10,"style":"BOLD"},{"offset":26,"length":4,"style":"UNDERLINE"},{"offset":26,"length":4,"style":"HIGHLIGHT"}],"entityRanges":[],"data":{}},{"key":"fvja2","text":" ","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"do8sm","text":"map - returns new array that’s the result of executing its given block once for each element in its receiver (allows you to bypass declaring result array)  ","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":3,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"fgq3r","text":"    map! - dangerous version","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":10,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"f2ujd","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"dld3r","text":"count","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":5,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"bj1ff","text":"if passed no argument, synonymous with length","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":10,"length":2,"style":"ITALIC"},{"offset":10,"length":11,"style":"HIGHLIGHT"}],"entityRanges":[],"data":{}},{"key":"4g4vd","text":"if passed one argument, returns number of elements equal to argument","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":10,"length":3,"style":"ITALIC"},{"offset":10,"length":12,"style":"HIGHLIGHT"}],"entityRanges":[],"data":{}},{"key":"36rfc","text":"if passed a block , returns number of truthy elements ","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":10,"length":7,"style":"HIGHLIGHT"},{"offset":12,"length":5,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"di5o7","text":"select - returns new collection containing all elements in its receiver for which the given block returns a truthy value","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":6,"style":"BOLD"},{"offset":108,"length":6,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"d10q3","text":"     reject - returns elements that return falsey values when passed to given block  ","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":11,"style":"BOLD"},{"offset":43,"length":6,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"1r14","text":"     select!     reject!","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":24,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"ajg61","text":"\n sort_by - sorts receiver by the return values of its elements when they are passed to the given block, and returns an array in that order (does not modify receiver) ","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":2,"length":7,"style":"BOLD"},{"offset":141,"length":25,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"76mek","text":"\n each_with_index - calls given block with two arg’s - item & index - for each item in receiver ","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":2,"length":15,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"dmfv7","text":"\n each_index - helpful when using map (to modify elements based on their index values) or each_char      **think….”for each number/character, at each index, do this\"\n   \n **consider using reduce whenever you find yourself setting a variable you reference throughout an iteration** ","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":2,"length":10,"style":"BOLD"},{"offset":34,"length":3,"style":"BOLD"},{"offset":90,"length":9,"style":"BOLD"},{"offset":100,"length":7,"style":"BOLD"},{"offset":171,"length":2,"style":"BOLD"},{"offset":188,"length":6,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"7dahu","text":"\n reduce - combines all elements of its receiver by applying a binary operation. invoked 3 different ways: ","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":2,"length":6,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"d9lqb","text":"with one argument, a symbol that names a binary method or operator ","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":17,"style":"HIGHLIGHT"}],"entityRanges":[],"data":{}},{"key":"a89mi","text":"( : + ) ( : * ) ( : * * )","type":"ordered-list-item","depth":2,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4vasj","text":"with a block and no argument. block has 2 parameters: accumulator and current element ","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":28,"style":"HIGHLIGHT"},{"offset":30,"length":55,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"fsekr","text":"ex: [1, 2, 3].reduce { |acc, el| acc + el } ","type":"ordered-list-item","depth":2,"inlineStyleRanges":[{"offset":0,"length":3,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"960m","text":"interpreter stores first element in the acc arg, and adds every subsequent element in succession. it continues to reassign acc to the new value after each iteration, until it reaches the end of the array. then it returns acc","type":"ordered-list-item","depth":3,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eregk","text":"invoking with a block gives greater control over how to reduce the receiver ","type":"ordered-list-item","depth":2,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fjqka","text":"like in finding sum of only even elements ","type":"ordered-list-item","depth":3,"inlineStyleRanges":[{"offset":23,"length":4,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"3b5tn","text":"with a block and one argument that’s the initial accumulator. block has 2 parameters: accumulator and current element ","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":29,"style":"HIGHLIGHT"},{"offset":62,"length":55,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"f1hoh","text":"use when you want to use a counter or a result array/string as the accumulator (rather than the first element of the array)","type":"ordered-list-item","depth":2,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"aofum","text":"interpreter will iterate through entire receiver (including first element)","type":"ordered-list-item","depth":2,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"19ph2","text":"**the accumulator is simply a variable available throughout the iteration that’s reassigned after each iteration**","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":114,"style":"ITALIC"},{"offset":6,"length":11,"style":"HIGHLIGHT"}],"entityRanges":[],"data":{}}]}',
  author_id: 2,
  notebook_id: 2
)

Tag.create(name: 'to do', author_id: 2)
Tag.create(name: 'misc', author_id: 2)
Tag.create(name: 'shopping', author_id: 2)

TaggedNote.create(note_id: 1, tag_id: 1)
TaggedNote.create(note_id: 1, tag_id: 2)
TaggedNote.create(note_id: 2, tag_id: 3)
